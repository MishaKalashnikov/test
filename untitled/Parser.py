from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time
import threading

# ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Selenium
def create_driver():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–∞—É–∑–µ—Ä–∞"""
    chrome_options = Options()
    chrome_options.headless = False  # –û—Ç–∫–ª—é—á–∞–µ–º headless, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--window-size=1920,1080")

    # ‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    chrome_options.add_argument("--disable-images")
    chrome_options.add_argument("--blink-settings=imagesEnabled=false")
    chrome_options.add_argument("--disable-extensions")
    chrome_options.add_argument("--disable-popup-blocking")
    chrome_options.add_argument("--disable-notifications")

    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)

    # ‚úÖ –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç WebDriver
    driver.set_page_load_timeout(60)
    driver.set_script_timeout(60)

    return driver

# ‚úÖ –†–∞–∑–±–∏–≤–∞–µ–º —è–∑—ã–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ)
languages_groups = [
    ["bg", "cs", "da", "de", "el", "es", "es-mx", "fi", "fr"],
    ["hu", "it", "ja", "ko", "nl", "no", "pl", "pt", "pt-br"],
    ["ro", "ru", "sk", "sv", "th", "tr", "vi", "zh-cn", "zh-tw"]
]

def get_stream_links(driver, languages, results):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç Twitch –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞ –∏ —Å–æ–±–∏—Ä–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç—Ä–∏–º—ã"""
    for lang in languages:
        url = f"https://www.twitch.tv/directory/category/counter-strike?sort=VIEWER_COUNT_ASC&lang={lang}"

        try:
            driver.get(url)
            time.sleep(5)  # –î–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç—É

            # üîπ –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∏–º–æ–≤
            for _ in range(5):
                driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
                time.sleep(3)

            # üîπ –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç—Ä–∏–º—ã
            streams = driver.find_elements(By.TAG_NAME, "a")
            raw_links = [stream.get_attribute("href") for stream in streams if stream.get_attribute("href")]

            # üîπ –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç—Ä–∏–º—ã –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –∫–∞–Ω–∞–ª–æ–≤
            filtered_names = list(set(
                link.replace("https://www.twitch.tv/", "").strip() for link in raw_links
                if link.startswith("https://www.twitch.tv/") and
                not any(x in link for x in ["/directory", "/videos", "/clips"])
            ))

            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã {len(filtered_names)} —Å—Ç—Ä–∏–º–æ–≤ –¥–ª—è —è–∑—ã–∫–∞: {lang}")
            results.extend(filtered_names)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —è–∑—ã–∫–∞ {lang}: {e}")

    driver.quit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º (–∑–∞–ø—É—Å–∫ 1 –±—Ä–∞—É–∑–µ—Ä–∞)"""
    results = []

    # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º Selenium
    driver = create_driver()
    get_stream_links(driver, languages_groups[0], results)

    # ‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –≤ `filtered_streams.txt`
    with open("filtered_streams.txt", "w", encoding="utf-8") as file:
        for channel in results:
            file.write(channel + "\n")

    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ `filtered_streams.txt`.")

if __name__ == "__main__":
    main()
