import subprocess
import time
import sys
import os
from utils.database import get_all_channels, delete_channel

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ `parser.py` –∏ `main.py`
PARSER_PATH = os.path.join(os.path.dirname(__file__), "utils", "parser.py")
BOT_PATH = os.path.join(os.path.dirname(__file__), "main.py")


def run_parser():
    """üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –ø–µ—Ä–µ–¥ –±–æ—Ç–æ–º"""
    print("\nüöÄ [1/2] –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...")
    try:
        subprocess.run([sys.executable, PARSER_PATH], check=True)
        print("‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
        sys.exit(1)  # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–∞—Ä—Å–µ—Ä —É–ø–∞–ª


def run_bot():
    """üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –ø–∞—Ä—Å–µ—Ä–∞"""
    print("\nüöÄ [2/2] –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    process = subprocess.Popen([sys.executable, BOT_PATH])
    process.wait()  # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞


def manage_database():
    """üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    while True:
        print("\nüìå –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–î:")
        print("1Ô∏è‚É£ - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–∞–Ω–∞–ª—ã")
        print("2Ô∏è‚É£ - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–∞–Ω–∞–ª—ã")
        print("3Ô∏è‚É£ - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

        if choice == "1":
            channels = get_all_channels()
            if channels:
                print("\nüìå –ö–∞–Ω–∞–ª—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
                for row in channels:
                    print(f"üîπ {row[1]} - {row[2]}")
            else:
                print("‚ö†Ô∏è –í –±–∞–∑–µ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤!")

        elif choice == "2":
            confirm = input("‚ùó –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –∫–∞–Ω–∞–ª—ã? (yes/no): ")
            if confirm.lower() == "yes":
                channels = get_all_channels()
                for channel in channels:
                    delete_channel(channel[1])
                print("‚úÖ –í—Å–µ –∫–∞–Ω–∞–ª—ã —É–¥–∞–ª–µ–Ω—ã!")
            else:
                print("‚ùå –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è.")

        elif choice == "3":
            break

        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")


if __name__ == "__main__":
    while True:
        print("\nüìå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
        print("1Ô∏è‚É£ - –ó–∞–ø—É—Å—Ç–∏—Ç—å **—Ç–æ–ª—å–∫–æ –ø–∞—Ä—Å–µ—Ä**")
        print("2Ô∏è‚É£ - –ó–∞–ø—É—Å—Ç–∏—Ç—å **—Ç–æ–ª—å–∫–æ –±–æ—Ç–∞**")
        print("3Ô∏è‚É£ - –ó–∞–ø—É—Å—Ç–∏—Ç—å **–æ–±–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞** (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
        print("4Ô∏è‚É£ - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        print("5Ô∏è‚É£ - –í—ã–π—Ç–∏")

        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞: ").strip()

        if choice == "1":
            run_parser()

        elif choice == "2":
            run_bot()

        elif choice == "3":
            run_parser()
            time.sleep(2)  # –û–∂–∏–¥–∞–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î
            run_bot()

        elif choice == "4":
            manage_database()

        elif choice == "5":
            print("üëã –í—ã—Ö–æ–¥...")
            sys.exit(0)

        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
